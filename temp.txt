import { EventBridgeClient, PutEventsCommand } from "@aws-sdk/client-eventbridge";

const client = new EventBridgeClient({ region: process.env.TARGET_REGION });
const busName = process.env.TARGET_BUS!;

export const handler = async (event: any) => {
  console.log("Received log event:", JSON.stringify(event));

  const params = {
    Entries: [{
      Source: "cross.account.logs",
      DetailType: "LogEvent",
      Detail: JSON.stringify(event),
      EventBusName: busName
    }]
  };

  await client.send(new PutEventsCommand(params));
  return {};
};      },
    });

    // Allow Lambda to put events into cross-account EventBridge
    forwarder.addToRolePolicy(new iam.PolicyStatement({
      actions: ['events:PutEvents'],
      resources: [`arn:aws:events:<CONSUMER_REGION>:<ACCOUNT_B_ID>:event-bus/CrossAccountLogsBus`],
    }));

    // Subscription filter: forward all logs to Lambda
    new logs.SubscriptionFilter(this, 'LogsToForwarder', {
      logGroup,
      destination: new logs_destinations.LambdaDestination(forwarder),
      filterPattern: logs.FilterPattern.allEvents(),
    });
  }
}
